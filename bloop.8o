#----------------------------#
#  bloop
#  author: jackie kircher
#----------------------------#

#-- sprites --#
: octopus #11x12
  0x0F 0x00 0x1F 0x80 0x1F 0x80 0x1F 0x80
  0x1F 0x80 0x0A 0x80 0x0F 0x00 0x1A 0x80
  0x2A 0x80 0x2A 0x80 0xAA 0xA0 0x51 0x40
  0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

: octopus-head #6x7
  0x78 0xFC 0xFC 0xFC 0xFC 0x54 0x78

: dot
  0x80


#-- setup --#

  # registers
  :alias arm1_x va
  :alias arm1_y vb
  :alias arm2_x vc
  :alias arm2_y vd

  # directions
  # these are all weird looking so that two cardinal directions
  # can be added together to make a diagonal direction
  #
  # UP + DOWN  -> 0
  # UP + RIGHT -> UPRIGHT
  #
  :const UP        -1
  :const LEFT      -3
  :const DOWN       1
  :const RIGHT      3
  :const UPLEFT    -4
  :const UPRIGHT    2
  :const STOP       0
  :const DOWNLEFT  -2
  :const DOWNRIGHT  4

  # game-state
  : arm1-direction -3

: setup
  hires
;


#-- drawing --#

# draws the tentacle
: draw-arm1
  i := dot
  sprite arm1_x arm1_y 1
;


# -- main --#

: main
  setup

  # draw the octopus head
  # v1 -> x coordinate
  # v2 -> y coordinate
  v1 := 60
  v2 := 24
  i  := octopus-head
  sprite v1 v2 7

  # start arm1 (left) below the head
  arm1_x := 60
  arm1_y := 31
  draw-arm1

  loop
    steer-arm1
    move-arm1
  again
;

: steer-arm1
  :alias input v1

  i := arm1-direction
  load v0

# v1 -> new arm direction
  v2 := 0
  input := 5 #w
  if input key then v2 += UP
  input := 7 #a
  if input key then v2 += LEFT
  input := 8 #s
  if input key then v2 += DOWN
  input := 9 #d
  if input key then v2 += RIGHT

# can't stop won't stop
  if v2 == 0 then return

  v0 := v2
  i  := arm1-direction
  save v0
;

: move-arm1
# v1 -> dx
  v1 := 0
# v2 -> dy
  v2 := 0

  i := arm1-direction
  load v0

  if v0 == UPLEFT    then v1 += -1
  if v0 == LEFT      then v1 += -1
  if v0 == DOWNLEFT  then v1 += -1
  if v0 == UPRIGHT   then v1 +=  1
  if v0 == RIGHT     then v1 +=  1
  if v0 == DOWNRIGHT then v1 +=  1

  if v0 == UPLEFT    then v2 += -1
  if v0 == UP        then v2 += -1
  if v0 == UPRIGHT   then v2 += -1
  if v0 == DOWNLEFT  then v2 +=  1
  if v0 == DOWN      then v2 +=  1
  if v0 == DOWNRIGHT then v2 +=  1

  arm1_x += v1
  arm1_y += v2
  draw-arm1
;
